name: Deploy to Amazon EC2

on:
  push:
    branches:
      - dev

# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹  이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: foohaha-github-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: foohaha-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: foohaha-codedeploy-deployment-group
  PROJECT_NAME: Foohaha-Back
  ROOT_PATH: /home/runner/work/Foohaha-Back/Foohaha-Back
  RESOURCE_PATH: /home/runner/work/Foohaha-Back/Foohaha-Back/src/main/resources

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # (0) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    # (1) JDK 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    # (2-1) application-*.properties 생성
    - name: properties 파일 생성
      run: | 
        cd ./src/main/resources
        touch ./application.properties
        echo "${{secrets.APPLICATION_PROPERTIES}}" > ./application.properties
        touch ./application-redis.properties
        echo "${{secrets.APPLICATION_REDIS_PROPERTIES}}" > ./application-redis.properties
      shell: bash
        
    # (2-2) keystore-p12.tar.gpg 파일 복호화
    - name: keystore 파일 복호화
      run: gpg --quiet --batch --yes --always-trust --decrypt --passphrase=${{ secrets.KEYSTORE_DECRYPT_KEY }} --output ${{env.RESOURCE_PATH}}/keystore-p12.tar ${{env.RESOURCE_PATH}}/keystore-p12.tar.gpg

    # (2-3) keystore-p12.tar 압축 해제 +resources폴더로 파일이동
    - name: Unzip application yml
      run: | 
        tar xvf ${{env.RESOURCE_PATH}}/keystore-p12.tar
        mv ${{env.ROOT_PATH}}/keystore.p12 ${{env.RESOURCE_PATH}}

      shell: bash

    # (3-0) Gradle 실행 권한 부여
    - name: gradlew에 실행 권한 부여
      run: chmod +x ./gradlew

    # (3-1) Gradle build
    - name: Build with Gradle
      run: ./gradlew build

    # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # (5) 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

    # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
