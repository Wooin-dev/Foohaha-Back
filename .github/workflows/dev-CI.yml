
name: develop CI check

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

permissions:
  checks: write
  pull-requests: write

jobs:
  build:
    name: Java CI with Gradle
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # 환경 변수 세팅
      - name: properties 파일 생성
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{secrets.APPLICATION_PROPERTIES}}" > ./application.properties
          touch ./application-redis.properties
          echo "${{secrets.APPLICATION_REDIS_PROPERTIES}}" > ./application-redis.properties
        shell: bash

      # gradle 실행 허가
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # Build with Gradle 대체
      - name: 어플리케이션 실행 테스트(테스트 코드X)
        run: ./gradlew clean build --exclude-task test

      # build Test
      - name: 테스트 코드 실행
        run: ./gradlew --info test

      - name: 테스트 결과 PR에 코멘트 작성
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()  # 테스트가 실패했을때만 or 테스트가 성공했을때만 알려주기(여기선 둘다!)
        with:
          files: |
            **/build/test-results/**/*.xml

      # Files changed에서 어디에서 잘못되었는지 가르쳐준다.
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'