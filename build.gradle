plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
}

group = 'com.wooin'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
    testImplementation 'org.springframework.security:spring-security-test:6.0.2'

    // JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    //Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.4'

    // JPA 설정
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'

    // MySQL
    implementation 'mysql:mysql-connector-java:8.0.33'
    runtimeOnly 'com.mysql:mysql-connector-j:8.0.32'

    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.0.4'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

}

test {
    finalizedBy jacocoTestReport // 테스트 종료후 항상 리포트 생성
}
jacocoTestReport {
    dependsOn test // 리포트 생성을 위해서는 test가 먼저 완료되어야 함
}

tasks.named('test') {
    useJUnitPlatform()
}


// QueryDsl 설정부
def generated = 'src/main/generated'

// querydsl Qclass 파일생성 위치 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set에 queryDsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시, QClass 디렉토리 삭제
clean {
    delete file(generated)
}
